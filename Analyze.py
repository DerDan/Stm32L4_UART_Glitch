raw = '''[2278]:    0
[2279]:    0
[2280]:    0
[2281]:    0
[2282]:    0
[2283]:    0
[2284]:    0
[2285]:    0
[2286]:    0
[2287]:    0
[2288]:    0
[2289]:    0
[2290]->11
[2290]:    0
[2291]:    0
[2292]:    0
[2293]:    0
[2294]:    0
[2295]:    0
[2296]:    0
[2297]:    0
[2298]:    0
[2299]:    0
[2300]:    0
[2301]:    0
[2302]:    0
[2303]:    0
[2304]:    0
[2305]:    0
[2306]:    0
[2307]:    0
[2308]:    0
[2309]:    0
[2310]:    0
[2311]:    0
[2312]:    0
[2313]:    0
[2314]:    0
[2315]:    0
[2316]:    0
[2317]:    0
[2318]:    0
[2319]:    0
[2320]:    0
[2321]:    0
[2322]:    0
[2323]:    0
[2324]:    0
[2325]:    0
[2326]:    0
[2327]:    0
[2328]:    0
[2329]:    0
[2330]:    0
[2331]:    0
[2332]:    0
[2333]:    0
[2334]:    0
[2335]:    0
[2336]:    0
[2337]:    0
[2338]:    0
[2339]:    0
[2340]:    0
[2341]:    0
[2342]:    0
[2343]:    0
[2344]:    0
[2345]:    0
[2346]:    0
[2347]:    0
[2348]:    0
[2349]:    0
[2350]:    0
[2351]:    0
[2352]:    0
[2353]:    0
[2354]:    0
[2355]:    0
[2356]:    0
[2357]:    0
[2358]:    0
[2359]:    0
[2360]:    0
[2361]:    0
[2362]:    0
[2363]:    0
[2364]:    0
[2365]:    0
[2366]:    0
[2367]:    0
[2368]:    0
[2369]:    0
[2370]:    0
[2371]:    0
[2372]:    0
[2373]:    0
[2374]:    0
[2375]:    0
[2376]:    0
[2377]:    0
[2378]:    0
[2379]:    0
[2380]:    0
[2381]:    0
[2382]:   12
[2383]:   33
[2384]:   13
[2385]:   16
[2386]:   15
[2387]:   15
[2388]:   22
[2389]:   25
[2390]:   14
[2391]:   14
[2392]:   33
[2393]:   28
[2394]:   26
[2395]:   27
[2396]:   30
[2397]:   28
[2398]:   25
[2399]:   26
[2400]:   14
[2401]:   24
[2402]:   24
[2403]:   27
[2404]:   27
[2405]:   23
[2406]:   32
[2407]:   25
[2408]:   21
[2409]:   22
[2410]:   20
[2411]:   16
[2412]:   20
[2413]:   20
[2414]:   14
[2415]:   15
[2416]:   33
[2417]:   29
[2418]:   21
[2419]:   24
[2420]:   25
[2421]:   33
[2422]:   28
[2423]:   23
[2424]:   18
[2425]:   25
[2426]:   28
[2427]:   26
[2428]:   20
[2429]:   27
[2430]:   40
[2431]:   28
[2432]:   25
[2433]:   29
[2434]:   39
[2435]:   27
[2436]:   17
[2437]:   24
[2438]:   29
[2439]:   27
[2440]:   24
[2441]:   25
[2442]:   26
[2443]:   28
[2444]:   24
[2445]:   28
[2446]:   24
[2447]:   21
[2448]:   29
[2449]:   18
[2450]:   26
[2451]:   21
[2452]:   22
[2453]:   25
[2454]:   18
[2455]:   27
[2456]:   26
[2457]:   25
[2458]:   27
[2459]:   25
[2460]:   18
[2461]:   34
[2462]:   20
[2463]:   20
[2464]:   19
[2465]:   20
[2466]:   29
[2467]:   25
[2468]:   27
[2469]:   27
[2470]:   38
[2471]:   29
[2472]:   34
[2473]:   42
[2474]:   31
[2475]:   19
[2476]:   31
[2477]:   18
[2478]:   28
[2479]:   20
[2480]:   18
[2481]:   26
[2482]:   25
[2483]:   21
[2484]:   29
[2485]:   45
[2486]:   30
[2487]:   30
[2488]:   20
[2489]:   24
[2490]:   30
[2491]:   20
[2492]:   23
[2493]:   28
[2494]:   31
[2495]:   20
[2496]:   23
[2497]:   25
[2498]:   26
[2499]->12
[2499]:   18
[2500]:    0
[2501]:    0
[2502]:    0
[2503]:    0
[2504]:    0
[2505]:    0
[2506]:    0
[2507]:    0
[2508]:    0
[2509]:    0
[2510]:    0
[2511]:    0
[2512]:    0
[2513]:    0
[2514]:    0
[2515]:    0
[2516]:    0
[2517]:    0
[2518]:    0
[2519]:    0
[2520]:    0
[2521]:    0
[2522]:    0
[2523]:    0
[2524]:    0
[2525]:    0
[2526]:    0
[2527]:    0
[2528]:    0
[2529]:    0
[2530]:    0
[2531]:    0
[2532]:    0
[2533]:    0
[2534]:    0
[2535]:    0
[2536]:    0
[2537]:    0
[2538]:    0
[2539]:    0
[2540]:    0
[2541]:    0
[2542]:    0
[2543]:    0
[2544]:    0
[2545]:    0
[2546]:    0
[2547]:    0
[2548]:    0
[2549]:    0
[2550]:    0
[2551]:    0
[2552]:    0
[2553]:    0
[2554]:    0
[2555]:    0
[2556]:    0
[2557]:    0
[2558]:    0
[2559]:    0
[2560]:    0
[2561]:    0
[2562]:    0
[2563]:    0
[2564]:    0
[2565]:    0
[2566]:    0
[2567]:    0
[2568]:    0
[2569]:    0
[2570]:    0
[2571]:    0
[2572]:    0
[2573]:    0
[2574]:    0
[2575]:    0
[2576]:    0
[2577]:    0
[2578]:    0
[2579]:    0
[2580]:    0
[2581]:    0
[2582]:    0
[2583]:    0
[2584]:    0
[2585]:    0
[2586]:    0
[2587]:    0
[2588]:    0
[2589]:    0
[2590]:    0
[2591]:    0
[2592]:    0
[2593]:    0
[2594]:    0
[2595]:    0
[2596]:    0
[2597]:    0
[2598]:    0
[2599]:    0
[2600]:    0
[2601]:    0
[2602]:    0
[2603]:    0
[2604]:    0
[2605]:    0
[2606]:    0
[2607]:    0
[2608]:    0
[2609]:    0
[2610]:    0
[2611]:    0
[2612]:    0
[2613]:    0
[2614]:    0
[2615]:    0
[2616]:    0
[2617]:    0
[2618]:    0
[2619]:    0
[2620]:    0
[2621]:    0
[2622]:    0
[2623]:    0
[2624]:    0
[2625]:    0
[2626]:    0
[2627]:    0
[2628]:    0
[2629]:    0
[2630]:    0
[2631]:    0
[2632]:    0
[2633]:    0
[2634]:    0
[2635]:    0
[2636]:    0
[2637]:    0
[2638]:    0
[2639]:    0
[2640]:    0
[2641]:    0
[2642]:    0
[2643]:    0
[2644]:    0
[2645]:    0
[2646]:    0
[2647]:    0
[2648]:    0
[2649]:    0
[2650]:    0
[2651]:    0
[2652]:    0
[2653]:    0
[2654]:    0
[2655]:    0
[2656]:    0
[2657]:    0
[2658]:    0
[2659]:    0
[2660]:    0
[2661]:    0
[2662]:    0
[2663]:    0
[2664]:    0
[2665]:    0
[2666]:    0
[2667]:    0
[2668]:    0
[2669]:    0
[2670]:    0
[2671]:    0
[2672]:    0
[2673]:    0
[2674]:    0
[2675]:    0
[2676]:    0
[2677]:    0
[2678]:    0
[2679]:    0
[2680]:    0
[2681]:    0
[2682]:    0
[2683]:    0
[2684]:    0
[2685]:    0
[2686]:    0
[2687]:    0
[2688]:    0
[2689]:    0
[2690]:    0
[2691]:    0
[2692]:    0
[2693]:    0
[2694]:    0
[2695]:    0
[2696]:    0
[2697]:    0
[2698]:    0
[2699]:    0
[2700]:    0
[2701]:    0
[2702]:    0
[2703]:    0
[2704]:    0
[2705]:    0
[2706]:    0
[2707]->13
[2707]:    0
[2708]:    0
[2709]:    0
[2710]:    0
[2711]:    0
[2712]:    0
[2713]:    0
'''

import matplotlib.pyplot as plt
import numpy as np

lines = raw.split('\n')
start = 0
index = 0
data = []
x_marker = []
x_data = []
for l in lines:
    if l.__contains__(":"):
        d = l.split(':')
        x = int(d[0].strip()[1:-1])
        v = int(d[1])
        print(v)
        if not start:
            if v > 0:
                start = index
        if start is not None:
            x_data.append(0.5 + x)
            data.append(v)
        index += 1
    if l.__contains__("->"):
        d = l.split('->')
        x = int(d[0].strip()[1:-1])
        v = int(d[1])
        x_marker.append(x)

plt.figure(figsize=(20, 6))
plt.grid(color='silver', which='both')

plt.bar(x_data, data, width=1, edgecolor="white", linewidth=0.6)
plt.xticks(x_marker, (np.array(x_marker) - (x_marker[1] - x_marker[0])) / 4)
plt.savefig("result.png")
print(x_marker)
